services:
  db:
    image: postgres:15-alpine
    container_name: evenup_db
    environment:
      - POSTGRES_DB=evenup_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
      - LANG=en_US.utf8
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d evenup_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: evenup_backend
    command: >
      sh -c "python manage.py migrate &&
             gunicorn evenup_project.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DB_NAME=evenup_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      # THE FIX: We explicitly tell Docker to build the 'development' stage
      target: development
    container_name: evenup_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:
